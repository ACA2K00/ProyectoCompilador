
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/left^rightUMINUSINT FLOAT PRINT NAME INUM FNUMinit : statementstatement : declarations ";" statement\n                 | print ";" statement\n                 | emptyempty :type : INT\n            | FLOATdeclarations  : declaration_type_name\n                     | declaration_assign_expression\n                     | declaration_fulldeclaration_type_name : type NAMEdeclaration_assign_expression : NAME "=" expressiondeclaration_full : type NAME "=" expressionprint : PRINT expressionexpression : expression "+" expression\n                  | expression "-" expression\n                  | expression "*" expression\n                  | expression "/" expression\n                  | expression "^" expressionexpression : "-" expression %prec UMINUSexpression : "(" expression ")"expression : INUM\n                  | FNUMexpression : NAME'
    
_lr_action_items = {'PRINT':([0,14,15,],[9,9,9,]),'$end':([0,1,2,5,14,15,24,25,],[-5,0,-1,-4,-5,-5,-2,-3,]),'NAME':([0,9,10,12,13,14,15,17,18,23,26,27,28,29,30,33,],[11,21,22,-6,-7,11,11,21,21,21,21,21,21,21,21,21,]),'INT':([0,14,15,],[12,12,12,]),'FLOAT':([0,14,15,],[13,13,13,]),';':([3,4,6,7,8,16,19,20,21,22,31,34,35,36,37,38,39,40,41,],[14,15,-8,-9,-10,-14,-22,-23,-24,-11,-20,-12,-15,-16,-17,-18,-19,-21,-13,]),'-':([9,16,17,18,19,20,21,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,],[17,27,17,17,-22,-23,-24,17,17,17,17,17,17,-20,27,17,27,-15,-16,-17,-18,-19,-21,27,]),'(':([9,17,18,23,26,27,28,29,30,33,],[18,18,18,18,18,18,18,18,18,18,]),'INUM':([9,17,18,23,26,27,28,29,30,33,],[19,19,19,19,19,19,19,19,19,19,]),'FNUM':([9,17,18,23,26,27,28,29,30,33,],[20,20,20,20,20,20,20,20,20,20,]),'=':([11,22,],[23,33,]),'+':([16,19,20,21,31,32,34,35,36,37,38,39,40,41,],[26,-22,-23,-24,-20,26,26,-15,-16,-17,-18,-19,-21,26,]),'*':([16,19,20,21,31,32,34,35,36,37,38,39,40,41,],[28,-22,-23,-24,-20,28,28,28,28,-17,-18,-19,-21,28,]),'/':([16,19,20,21,31,32,34,35,36,37,38,39,40,41,],[29,-22,-23,-24,-20,29,29,29,29,-17,-18,-19,-21,29,]),'^':([16,19,20,21,31,32,34,35,36,37,38,39,40,41,],[30,-22,-23,-24,-20,30,30,30,30,30,30,-19,-21,30,]),')':([19,20,21,31,32,35,36,37,38,39,40,],[-22,-23,-24,-20,40,-15,-16,-17,-18,-19,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statement':([0,14,15,],[2,24,25,]),'declarations':([0,14,15,],[3,3,3,]),'print':([0,14,15,],[4,4,4,]),'empty':([0,14,15,],[5,5,5,]),'declaration_type_name':([0,14,15,],[6,6,6,]),'declaration_assign_expression':([0,14,15,],[7,7,7,]),'declaration_full':([0,14,15,],[8,8,8,]),'type':([0,14,15,],[10,10,10,]),'expression':([9,17,18,23,26,27,28,29,30,33,],[16,31,32,34,35,36,37,38,39,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statement','init',1,'p_init','ly_calc.py',57),
  ('statement -> declarations ; statement','statement',3,'p_statement','ly_calc.py',63),
  ('statement -> print ; statement','statement',3,'p_statement','ly_calc.py',64),
  ('statement -> empty','statement',1,'p_statement','ly_calc.py',65),
  ('empty -> <empty>','empty',0,'p_empty','ly_calc.py',73),
  ('type -> INT','type',1,'p_type_specifier','ly_calc.py',77),
  ('type -> FLOAT','type',1,'p_type_specifier','ly_calc.py',78),
  ('declarations -> declaration_type_name','declarations',1,'p_declarations','ly_calc.py',83),
  ('declarations -> declaration_assign_expression','declarations',1,'p_declarations','ly_calc.py',84),
  ('declarations -> declaration_full','declarations',1,'p_declarations','ly_calc.py',85),
  ('declaration_type_name -> type NAME','declaration_type_name',2,'p_declaration_type_name','ly_calc.py',89),
  ('declaration_assign_expression -> NAME = expression','declaration_assign_expression',3,'p_declaration_assign_expression','ly_calc.py',94),
  ('declaration_full -> type NAME = expression','declaration_full',4,'p_declaration_full','ly_calc.py',98),
  ('print -> PRINT expression','print',2,'p_print','ly_calc.py',102),
  ('expression -> expression + expression','expression',3,'p_expression_binop','ly_calc.py',107),
  ('expression -> expression - expression','expression',3,'p_expression_binop','ly_calc.py',108),
  ('expression -> expression * expression','expression',3,'p_expression_binop','ly_calc.py',109),
  ('expression -> expression / expression','expression',3,'p_expression_binop','ly_calc.py',110),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','ly_calc.py',111),
  ('expression -> - expression','expression',2,'p_expression_uminus','ly_calc.py',115),
  ('expression -> ( expression )','expression',3,'p_direct_declarator','ly_calc.py',120),
  ('expression -> INUM','expression',1,'p_expression_number','ly_calc.py',125),
  ('expression -> FNUM','expression',1,'p_expression_number','ly_calc.py',126),
  ('expression -> NAME','expression',1,'p_expression_name','ly_calc.py',130),
]
